@using Behapy.Presentation.Models;
@model List<Behapy.Presentation.Models.Product>

@{
    ViewData["Title"] = "Admin";
    Layout = "~/Views/Shared/Admin/_Layout.cshtml";

    var pager = new Pager();
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
    }
}

<!-- Content Wrapper START -->
<div class="main-content">
    <div class="page-header">
        <h2 class="header-title">Sản Phẩm</h2>
        <div class="header-sub-title">
            <nav class="breadcrumb breadcrumb-dash">
                <a href="#" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>Trang Chủ</a>
                <span class="breadcrumb-item active" href="#">Sản phẩm</span>
            </nav>
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row m-b-30">
                <div class="col-6">
                    <div class="d-md-flex">
                        @using (Html.BeginForm("Admin", "Products", FormMethod.Get))
                        {
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.DropDownList("categoryId", ViewData["CategoryId"] as SelectList, "Tất cả danh mục", new { @class = "form-control", onchange = "this.form.submit();" })
                                </div>
                            </div>
                        }
                        <div class="ml-1">
                            <form class="input-group" asp-controller="Products" asp-action="AdminSearch" method="post">
                                <input type="text" name="q" class="form-control" value="@ViewData["SearchText"]" placeholder="Tìm kiếm sản phẩm" />
                                <button class="btn btn-tone  btn-primary"
                                        type="submit">
                                   Tìm kiếm
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-6 text-right">
                    <a class="btn btn-primary" asp-controller="Products" asp-action="Create">
                        <i class="anticon anticon-plus-circle m-r-5"></i>
                        <span>Thêm sản phẩm</span>
                    </a>
                </div>
            </div>
            <div class="table-responsive">
                @await Html.PartialAsync("AdminList", Model)
            </div>
        </div>
    </div>

    <!--Add Quantity Modal -->
    <div class="modal fade" id="quantityModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Thêm số lượng</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <form asp-controller="Products" asp-action="AddQuantity" asp-route-id="123" id="addQuantityForm">
                        <input type="hidden" id="productId" />
                        <input class="form-control" type="text" id="quantityInput" pattern="[0-9]*" oninput="validateInput()" placeholder="Số lượng sản phẩm" />
                        <div id="error-message" class="text-danger"></div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                    <button type="button" class="btn btn-tone btn-primary" id="addQuantityButton" onclick="addQuantity()">Thêm</button>
                </div>
            </div>
        </div>
    </div>
    <!--Add Quantity Modal End-->
    <!--Delete Modal -->
    <div class="modal fade" id="DeleteModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Xác nhận xóa</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <i class="anticon anticon-close"></i>
                    </button>
                </div>
                <div class="modal-body"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                    <button onclick="deleteProduct(this)" data-product-id="" class="confirm-delete btn btn-tone btn-danger">
                        Xác nhận xóa
                    </button>
                </div>
            </div>
        </div>
    </div>
    <!--Delete Modal End-->
    <!-- Pagination -->
    <div class="pagination-area pt-10">
        <nav aria-label="Page navigation example">
            @if (pager.TotalPages > 0)
            {
                <ul class="pagination justify-content-center">
                    @if (pager.CurrentPage > 1)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="Products" asp-action="Admin" asp-route-pg="1" asp-route-searchText="@ViewData["SearchText"]" asp-route-categoryId="@ViewData["Category"]">Đầu</a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" asp-controller="Products" asp-action="Admin" asp-route-pg="@(pager.CurrentPage - 1)" asp-route-searchText="@ViewData["SearchText"]" asp-route-categoryId="@ViewData["Category"]" aria-label="Trước">
                                <span class="fa fa-chevron-left"></span>
                            </a>
                        </li>
                    }

                    @for (var p = pager.StartPage; p <= pager.EndPage; p++)
                    {
                        <li class="page-item @(p == pager.CurrentPage ? "active" : "")">
                            @{
                                var pge = p;
                            }
                            <a asp-controller="Products" asp-action="Admin" asp-route-pg="@pge" asp-route-searchText="@ViewData["SearchText"]" asp-route-categoryId="@ViewData["Category"]" class="page-link">
                                @pge
                            </a>
                        </li>
                    }

                    @if (pager.CurrentPage < pager.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="Products" asp-action="Admin" asp-route-pg="@(pager.CurrentPage + 1)" asp-route-searchText="@ViewData["SearchText"]" asp-route-categoryId="@ViewData["Category"]" aria-label="Previous">
                                <span class="fa fa-chevron-right"></span>
                            </a>
                        </li>
                        <li class="page-item">
                            <a class="page-link" asp-controller="Products" asp-action="Admin" asp-route-pg="@pager.EndPage" asp-route-searchText="@ViewData["SearchText"]" asp-route-categoryId="@ViewData["Category"]">Cuối</a>
                        </li>
                    }
                </ul>
            }
        </nav>
    </div>
    <!-- Pagination end -->

</div>
<!-- Content Wrapper END -->
@section Scripts {
    <script>
        // Delete modal
        $(document).on('show.bs.modal', '#DeleteModal', function (event) {
            const modal = $(this);
            const button = $(event.relatedTarget);
            const productId = button.data('productId');
            const productName = button.data('productName');

            modal.find('.modal-body').text(`Bạn có chắc chắn muốn xóa ${productName} không?`)
            modal.find('.modal-footer .confirm-delete').data('productId', productId);
        })

        // Add quantity modal
        $(document).on('show.bs.modal', '#quantityModal', function (event) {
            const button = $(event.relatedTarget);
            const productId = button.data('product-id');
            $('#productId').val(productId);
            $('#addQuantityButton').prop('disabled', true);
        });

        function reloadTable(productId, quantity) {
            $.ajax({
                url: `/Products/AdminList?pg=${@pager.CurrentPage}&categoryId=${@(ViewData["Category"] ?? "null")}`,
                method: 'GET',
                data: { id: productId, quantityToAdd: quantity },
                success: function (res) {
                    $('.table-responsive').html(res);
                }
            });
        }

        function deleteProduct(btn) {
            const productId = $(btn).data('productId');
            $.ajax({
                url: `/Products/Delete/${productId}`,
                type: 'DELETE',
                contentType: 'application/json',
                success: function () {
                    document.location.reload();
                },
            });
        }

        // Add Quantity
        function addQuantity() {
            const productId = $('#productId').val();
            const quantityToAdd = $('#quantityInput').val();

            $.ajax({
                url: '/Products/AddQuantity',
                method: 'POST',
                data: { id: productId, quantityToAdd },
                success: function () {
                    bootstrap.showToast({
                        body: 'Đã cập nhật số lượng!',
                        zIndex: 9999
                    });

                    $('#quantityModal').modal('hide');
                    $('#quantityInput').val('');

                    reloadTable(productId, quantityToAdd);
                },
            });
        }

        //Check validation input
        function validateInput() {
            const quantityInput = $('#quantityInput');
            const errorMessage = $('#error-message');
            const addQuantityButton = $('#addQuantityButton');


            if (!quantityInput.val() || !/^[0-9]*$/.test(quantityInput.val())) {
                errorMessage.text('Vui lòng nhập số nguyên dương hợp lệ.');
                addQuantityButton.prop('disabled', true);
            } else {
                errorMessage.text('');
                addQuantityButton.prop('disabled', false);
            }
        }

    </script>
}